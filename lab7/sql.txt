Ex 1: Create database and tables

create database college;
use college;
 
create table student(
 student_id int not null primary key,
 name varchar(10) not null,
 year TINYINT not null default 1,
 dept_no int not null,
 major varchar(20)
);

create table department(
 dept_no int auto_increment not null,
 dept_name varchar(20) not null,
 office varchar(20) not null,
 office_tel varchar(13),
 UNIQUE(dept_name), PRIMARY KEY(dept_no)
);

alter table student MODIFY major varchar(40);
alter table student ADD gender enum("male","female");
desc student;

alter table department MODIFY dept_name varchar(40);
alter table department MODIFY office varchar(30);
desc department;



Ex 2: Insert data

alter table student DROP COLUMN gender;
insert into student values(20070002, 'James Bond', 3, 4, 'Business Administration');
insert into student values(20060001, 'Queenie', 4, 4, 'Business Administration');
insert into student values(20030001, 'Reonardo', 4, 2, 'Electronic Engineering');
insert into student values(20040003, 'Julia', 3, 2, 'Electronic Engineering');
insert into student values(20060002, 'Roosevelt', 3, 1, 'Computer Science');
insert into student values(20100002, 'Fearne', 3, 4, 'Business Administration');
insert into student values(20110001, 'Chloe', 2, 1, 'Computer Science');
insert into student values(20080003, 'Amy', 4, 3, 'Law');
insert into student values(20040002, 'Selina', 4, 5, 'English Literature');
insert into student values(20070001, 'Ellen', 4, 4, 'Business Administration');
insert into student values(20100001, 'Kathy', 3, 4, 'Business Administration');
insert into student values(20110002, 'Lucy', 2, 2, 'Electronic Engineering');
insert into student values(20030002, 'Michelle', 5, 1, 'Computer Science');
insert into student values(20070003, 'April', 4, 3, 'Law');
insert into student values(20070005, 'Alicia', 2, 5, 'English Literature');
insert into student values(20100003, 'Yullia', 3, 1, 'Computer Science');
insert into student values(20070007, 'Ashlee', 2, 4, 'Business Administration');

insert into department values(1,'Computer Science','Engineering building','02-3290-0123');
insert into department values(2,'Electronic Engineering','Engineering building','02-3290-2345');
insert into department values(3,'Law','Law building','02-3290-7896');
insert into department values(4,'Business Administration','Administration building','02-3290-1112');
insert into department values(5,'English Literature','Literature building','02-3290-4412');


Ex 3: Update & delete data

update department set dept_name='Electronic and Electronic Engineering' where dept_no=2;
update student set major='Electronic and Electronic Engineering' where dept_no=2;

insert into department values(6,'Education','Education building','02-3290-2347');

update student set major='Education',dept_no=6 where name='Chloe';

delete from student where name='Michelle';

delete from student where name='Fearne';



Ex 4: Query data

select * from student where major='Computer Science';
select student_id, year, major from student;
select * from student where year=3;
select * from student where year<3;
select * from student where dept_no = (select dept_no from department where dept_name='Business Administration');



Ex 5: Advanced query

select * from student where student_id LIKE '2007%';
select * from student order by student_id;
select * from student group by major having avg(year)>3;
select * from student where major='Business Administration' and student_id LIKE '%2007%' LIMIT 2;


Ex 6: Multi-table query - world DB

select name,language from countries inner join languages on code=country_code where independence_year=1948;

select name from countries inner join languages on code=country_code where language='English' and name in (select name from countries inner join languages on code=country_code where language='French');

select language, count(language) from countries join languages on code = country_code and life_expectancy>75 group by language order by count(language) desc limit 5;

select capital from countries inner join languages on code=country_code where language='Korean' and name in (select name from countries inner join languages on code=country_code where language='English');

//

select sum(surface_area) from countries inner join cities on code = country_code order by cities.population desc limit 5;
